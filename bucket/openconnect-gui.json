{
    "version": "1.5.3",
    "description": "OpenConnect-GUI VPN Client",
    "homepage": "https://github.com/openconnect/openconnect-gui",
    "checkver": "github",
    "depends": [
        "openvpn",
        "vcredist"
    ],
    "pre_install": [
        "if(!(test-path \"$dir\\vpnc_customenv.txt\")) { New-Item \"$dir\\vpnc_customenv.txt\" | Out-Null }"
    ],
    "bin": [
        "openconnect-gui.exe",
        "openconnect.exe"
    ],
    "persist": [
        "vpnc_customenv.txt"
    ],
    "post_install": [
        "cd $dir",
        "$src =\"\"",
        "$ByteArray = [System.Convert]::FromBase64String($src)",
        "[System.IO.File]::WriteAllBytes((Join-Path (Get-Location).Path \"vpnc_script.js\"), $ByteArray)"
    ],
    "shortcuts": [
        ["openconnect-gui.exe", "OpenConnect-GUI VPN Client"]
    ],
    "license": "GPLv2",
    "url": "https://github.com/openconnect/openconnect-gui/releases/download/v1.5.3/openconnect-gui-1.5.3-win32.exe#/dl.7z",
    "hash": "sha512:2055a303ed6a40a0267203bc3c3d4ad14c86f7d690ab3cc85918ff0afc2103b1ca985e28f9e1efa92fb7b3cb41cd0add02aac9439a83b9b42e29e5bd01bff621",
    "autoupdate": {
        "url": "https://github.com/openconnect/openconnect-gui/releases/download/v$version/openconnect-gui-$version-win32.exe#/dl.7z",
        "hash": {
            "url": "https://github.com/openconnect/openconnect-gui/releases/download/v$version/openconnect-gui-$version-win32.exe.sha512",
            "find": "$sha512"
        }
    }
}
