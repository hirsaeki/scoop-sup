{
    "version": "7.2.4",
    "description": "Powerful x86 and AMD64/Intel64 virtualization product for enterprise as well as home use.",
    "homepage": "https://www.virtualbox.org/",
    "license": {
        "identifier": "GPL-2.0-only|Freeware",
        "url": "https://www.virtualbox.org/wiki/VirtualBox_PUEL"
    },
    "notes": [
        "The VirtualBox Extension Pack is only free for personal, educational or evaluation use.",
        "A license must be purchased for enterprise use.",
        "For more information, go here: https://www.virtualbox.org/wiki/Licensing_FAQ"
    ],
    "architecture": {
        "64bit": {
            "url": [
                "https://download.virtualbox.org/virtualbox/7.2.4/VirtualBox-7.2.4-170995-Win.exe#/setup.exe",
                "https://download.virtualbox.org/virtualbox/7.2.4/Oracle_VirtualBox_Extension_Pack-7.2.4.vbox-extpack"
            ],
            "hash": [
                "22988be9792f39c8e07068504612bd83aae8f8317e2aaf7515079f5cd9421675",
                "b80ee54252442ec025d6a7b2b9c3f32526ab5c2d91a0ffa2385be3ed83bcff0b"
            ]
        }
    },
    "installer": {
        "script": [
            "if (!(is_admin)) { error \"$app requires admin rights to $cmd\"; break }",
            "Invoke-ExternalCommand \"$dir\\setup.exe\" -ArgumentList @('--extract', '-path', \"$dir\", '--silent') | Out-Null",
            "Get-ChildItem \"$dir\\VirtualBox*.msi\" | Rename-Item -NewName 'setup.msi'",
            "",
            "# Modify MSI to remove unnecessary checks",
            "$updateScript = {",
            "    param($msiPath)",
            "    try {",
            "        $installer = New-Object -ComObject WindowsInstaller.Installer",
            "        $database = $installer.OpenDatabase($msiPath, 1)",
            "        $sql = @(",
            "            \"DELETE FROM ControlEvent WHERE Condition = 'VBox_Target_Dir_Is_Valid=`\"0`\"'\",",
            "            \"DELETE FROM ControlEvent WHERE Condition = 'VBox_Target_Dir_Is_Valid=`\"1`\"'\",",
            "            \"DELETE FROM LaunchCondition WHERE Condition = 'Installed OR (VBox_Target_Dir_Is_Valid=`\"1`\")'\"",
            "        )",
            "        foreach ($query in $sql) {",
            "            $view = $database.OpenView($query)",
            "            $view.Execute()",
            "            $view.Close()",
            "        }",
            "        $database.Commit()",
            "    } catch {",
            "        Write-Error \"MSI database update error: $_\"",
            "    } finally {",
            "        if ($null -ne $database) { $database = $null }",
            "        if ($null -ne $installer) {",
            "            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($installer) | Out-Null",
            "        }",
            "        [System.GC]::Collect()",
            "        [System.GC]::WaitForPendingFinalizers()",
            "    }",
            "}",
            "& powershell.exe -Command $updateScript -Args \"$dir\\setup.msi\"",
            "",
            "Start-Process msiexec -ArgumentList @('/i', \"`\"$dir\\setup.msi`\"\", '/qn', '/norestart', \"INSTALLDIR=`\"$dir`\"\") -Wait -Verb RunAs | Out-Null",
            "Start-Process icacls -ArgumentList @(\"`\"$dir`\"\", '/grant', 'Everyone:F', '/T') -Wait -Verb RunAs | Out-Null",
            "Remove-Item \"$env:PUBLIC\\Desktop\\Oracle VM VirtualBox.lnk\"",
            "Remove-Item -Recurse \"$([Environment]::GetFolderPath('commonstartmenu'))\\Programs\\Oracle VM VirtualBox\"",
            "$extPackResult = Invoke-ExternalCommand \"$dir\\VBoxManage.exe\" -ArgumentList @('extpack', 'install', '--replace', \"`\"$dir\\Oracle_VM_VirtualBox_Extension_Pack-$version.vbox-extpack`\"\")",
            "Remove-Item \"$dir\\setup.exe\", \"$dir\\setup.msi\"",
            "Write-Host \"here is extPackResult\"",
            "$extPackResult"
        ]
    },
    "uninstaller": {
        "script": [
            "if (!(is_admin)) { error \"$app requires admin rights to $cmd\"; break }",
            "$id_array = wmic product where \"name like 'Oracle VM VirtualBox%'\" get IdentifyingNumber",
            "if (!($id_array[2] -match '({[0-9A-F-]+})')) { error 'Could not find product ID'; break }",
            "$id = $matches[1]",
            "Invoke-ExternalCommand msiexec -ArgumentList @('/x', \"$id\", '/qn', '/norestart') -RunAs | Out-Null"
        ]
    },
    "bin": [
        "VBoxBalloonCtrl.exe",
        "VBoxBugReport.exe",
        "VBoxDTrace.exe",
        "VBoxExtPackHelperApp.exe",
        "VBoxHeadless.exe",
        "vbox-img.exe",
        "VBoxManage.exe",
        "VBoxNetDHCP.exe",
        "VBoxNetNAT.exe",
        "VBoxSDS.exe",
        "VBoxSVC.exe",
        "VBoxTestOGL.exe",
        "VBoxWebSrv.exe",
        "VirtualBox.exe",
        "VirtualBoxVM.exe"
    ],
    "shortcuts": [
        [
            "VirtualBox.exe",
            "VirtualBox"
        ]
    ],
    "checkver": {
        "url": "https://www.virtualbox.org/wiki/Downloads",
        "regex": "VirtualBox-(?<version>[\\d.]+)-(?<revision>[\\d]+)-Win.exe"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": [
                    "https://download.virtualbox.org/virtualbox/$version/VirtualBox-$version-$matchRevision-Win.exe#/setup.exe",
                    "https://download.virtualbox.org/virtualbox/$version/Oracle_VirtualBox_Extension_Pack-$version.vbox-extpack"
                ]
            }
        },
        "hash": {
            "url": "https://www.virtualbox.org/download/hashes/$version/SHA256SUMS"
        }
    }
}
